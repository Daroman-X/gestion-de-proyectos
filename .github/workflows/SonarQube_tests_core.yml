name: SonarQube Analysis

on: [push, pull_request]

jobs:
  sonarQube:
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:lts
        ports:
          - 9000:9000
        options: >-
          --health-cmd="curl -f http://localhost:9000 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to be ready..."
          timeout 60 sh -c 'until curl -s http://localhost:9000/api/system/health | grep -q "GREEN"; do sleep 2; done'

      - name: Install SonarScanner
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip
          mv sonar-scanner-4.6.2.2472-linux sonar-scanner
          echo "$(pwd)/sonar-scanner/bin" >> $GITHUB_PATH

      - name: Verify SonarScanner Installation
        run: sonar-scanner -v

      - name: Run SonarQube Scanner
        env:
          SONAR_HOST_URL: http://localhost:9000
          SONAR_TOKEN: admin
        run: |
          sonar-scanner \
            -Dsonar.projectKey=my_django_project \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN